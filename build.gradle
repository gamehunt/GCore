buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

version = "${config.version}-${config.build}"
group = "gamehunt.gcore" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "gcore"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    
    replace 'GRADLE:BUILD', config.build
    replace 'GRADLE:VERSION', config.version
    replaceIn 'Constants.java' 
    makeObfSourceJar = false 
    useDepAts = true
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories { 
    maven {
        url "https://mvnrepository.com/artifact/org.reflections/reflections"
        url "https://mvnrepository.com/artifact/com.google.guava/guava"
    }
}
dependencies {
	compile 'org.reflections:reflections:0.9.11'
	compile 'com.google.guava:guava:21.0'

}
task incrementBuildNumber(dependsOn: 'reobfJar') << {
    config.build = (config.build.toString().toInteger()) + 1
    configFile.withWriter {
        config.toProperties().store(it, "")
    }
}
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}
jar {
   manifest {
       attributes 'FMLAT': 'gcore_at.cfg'
   }
}

defaultTasks 'clean', 'build', 'incrementBuildNumber'
